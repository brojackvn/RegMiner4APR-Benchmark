{
    "id": 7,
    "subject": "aviatorscript",
    "bug_id": "RegressionBug-7",
    "source_file": "",
    "line_number": [],
    "count_neg": 1,
    "count_pos": 573,
    "passing_test_identifiers": [
        "com.googlecode.aviator.runtime.type.AviatorPatternUnitTest#testCompareNumber",
        "com.googlecode.aviator.runtime.function.seq.SeqSortFunctionUnitTest#testSort_HashSet",
        "com.googlecode.aviator.AviatorEvaluatorInstanceUnitTest#testCompileWithoutCache",
        "com.googlecode.aviator.test.function.GrammarUnitTest#testIntegralIntoDecimal",
        "com.googlecode.aviator.runtime.function.string.StringContainsFunctionUnitTest#testIllegalArguments_Three",
        "com.googlecode.aviator.runtime.function.string.StringContainsFunctionUnitTest#testClassCastError2",
        "com.googlecode.aviator.runtime.type.AviatorPatternUnitTest#testCompareJavaType",
        "com.googlecode.aviator.runtime.function.seq.SeqMakePredicateFunctionUnitTest#testMakePredicate",
        "com.googlecode.aviator.test.function.FunctionTest#testSeqNewMap",
        "com.googlecode.aviator.lexer.ExpressionLexerUnitTest#testExpression_Logic_And",
        "com.googlecode.aviator.JavaMethodReflectionFunctionMissingTest#testFunctionMissing",
        "com.googlecode.aviator.LambdaUnitTest#testSpecialVars",
        "com.googlecode.aviator.test.function.FunctionTest#testBitOperationsWithVariable",
        "com.googlecode.aviator.lexer.ExpressionLexerUnitTest#testExpressionHasPattern",
        "com.googlecode.aviator.lexer.ExpressionLexerUnitTest#testExpression_WithIllegalString",
        "com.googlecode.aviator.runtime.type.AviatorPatternUnitTest#testMatchJavaChar",
        "com.googlecode.aviator.AviatorEvaluatorUnitTest#compileBlankExpression1",
        "com.googlecode.aviator.test.function.GrammarUnitTest#testIllegalStatement1",
        "com.googlecode.aviator.runtime.type.AviatorStringUnitTest#testNot",
        "com.googlecode.aviator.runtime.function.string.StringEndsWithFunctionUnitTest#testNullPointerException2",
        "com.googlecode.aviator.runtime.function.string.StringIndexOfFunctionUnitTest#testClassCastError2",
        "com.googlecode.aviator.runtime.function.string.StringContainsFunctionUnitTest#testIllegalArguments_one",
        "com.googlecode.aviator.test.function.FunctionTest#testHexNumber",
        "com.googlecode.aviator.test.function.FunctionTest#testIssue2",
        "com.googlecode.aviator.runtime.type.AviatorNumberUnitTest#testModWithOtherType2",
        "com.googlecode.aviator.JavaMethodReflectionFunctionMissingTest#testFunctionNotFound2",
        "com.googlecode.aviator.code.asm.ASMCodeGeneratorUnitTest#testOnMethod_withTwoArguments",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testIllegalPattern",
        "com.googlecode.aviator.runtime.function.string.StringLengthFunctionUnitTest#testCall",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testParseExpression_WithIllegalParen1",
        "com.googlecode.aviator.runtime.type.AviatorNumberUnitTest#testMultWithJavaType",
        "com.googlecode.aviator.code.asm.ASMCodeGeneratorUnitTest#testOnUnsignedShiftRight",
        "com.googlecode.aviator.runtime.type.AviatorPatternUnitTest#testAddBoolean",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testTernary3",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testIllegalStatement1",
        "com.googlecode.aviator.code.asm.ASMCodeGeneratorUnitTest#testOnConstant_Nil",
        "com.googlecode.aviator.runtime.type.AviatorBooleanUnitTest#testCompareJavaBoolean",
        "com.googlecode.aviator.code.asm.ASMCodeGeneratorUnitTest#testOnMethod_withoutArguments",
        "com.googlecode.aviator.runtime.function.math.MathLog10FunctionUnitTest#testCall",
        "com.googlecode.aviator.test.function.GrammarUnitTest#testMatch",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testIllegalStatement2",
        "com.googlecode.aviator.runtime.function.system.PrintFunctionUnitTest#testCall_WithTwoArgument",
        "com.googlecode.aviator.runtime.type.AviatorJavaTypeUnitTest#modJavaBooleanWithNumber",
        "com.googlecode.aviator.code.asm.ASMCodeGeneratorUnitTest#testOnConstant_Variable",
        "com.googlecode.aviator.runtime.type.AviatorNumberUnitTest#testAddWithJavaString",
        "com.googlecode.aviator.AviatorEvaluatorInstanceUnitTest#testAddInstanceMethods",
        "com.googlecode.aviator.runtime.function.math.MathSinFunctionUnitTest#testCall",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testSimpleExpression",
        "com.googlecode.aviator.runtime.function.math.MathLog10FunctionUnitTest#testClassCastError2",
        "com.googlecode.aviator.test.function.GrammarUnitTest#testAssignment",
        "com.googlecode.aviator.JavaMethodReflectionFunctionMissingTest#testFunctionNotFound1",
        "com.googlecode.aviator.runtime.function.seq.SeqCountFunctionUnitTest#testCount_EmptyArray",
        "com.googlecode.aviator.runtime.type.AviatorStringUnitTest#testCompareNumber",
        "com.googlecode.aviator.runtime.function.string.StringContainsFunctionUnitTest#testNullPointerException2",
        "com.googlecode.aviator.LambdaUnitTest#testLambdaWithNestObject",
        "com.googlecode.aviator.test.function.OperatorFunctionTest#testCustomBinOperatorFunction",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testArrayAccess_IndexIsExp",
        "com.googlecode.aviator.runtime.function.math.MathPowFunctionUnitTest#testCall",
        "com.googlecode.aviator.test.function.GrammarUnitTest#testTernaryOperator",
        "com.googlecode.aviator.AviatorEvaluatorInstanceUnitTest#testExec",
        "com.googlecode.aviator.runtime.function.seq.SeqMakePredicateFunctionUnitTest#testMakePredicate_FixedValue",
        "com.googlecode.aviator.utils.SyncLRUMapUnitTest#testLRU",
        "com.googlecode.aviator.test.function.FunctionTest#testSeqNewArray",
        "com.googlecode.aviator.runtime.type.AviatorPatternUnitTest#testAddNumber",
        "com.googlecode.aviator.runtime.function.math.MathPowFunctionUnitTest#testNullPointer",
        "com.googlecode.aviator.runtime.function.seq.SeqFilterFunctionUnitTest#testFilter_String",
        "com.googlecode.aviator.test.function.GrammarUnitTest#test4J",
        "com.googlecode.aviator.runtime.type.AviatorNumberUnitTest#testDivWithJavaType",
        "com.googlecode.aviator.lexer.ExpressionLexerUnitTest#testExpression_Not",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testParseBlankExpression1",
        "com.googlecode.aviator.runtime.function.string.StringIndexOfFunctionUnitTest#testIllegalArguments_null",
        "com.googlecode.aviator.runtime.type.AviatorPatternUnitTest#testAddString",
        "com.googlecode.aviator.runtime.function.math.MathTanFunctionUnitTest#testClassCastError1",
        "com.googlecode.aviator.lexer.ExpressionLexerUnitTest#testSimpleExpression_WithHexNumber",
        "com.googlecode.aviator.runtime.function.math.MathAbsFunctionUnitTest#testCall",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testArrayAccess_Illegal1",
        "com.googlecode.aviator.test.function.GrammarUnitTest#testIssue77",
        "com.googlecode.aviator.code.asm.ASMCodeGeneratorUnitTest#testOnConstant_String",
        "com.googlecode.aviator.runtime.function.string.StringStartsWithFunctionUnitTest#testCall",
        "com.googlecode.aviator.runtime.function.math.MathSinFunctionUnitTest#testNullPointer",
        "com.googlecode.aviator.LambdaUnitTest#testIssue101",
        "com.googlecode.aviator.runtime.function.math.MathCosFunctionUnitTest#testClassCastError1",
        "com.googlecode.aviator.runtime.type.AviatorJavaTypeUnitTest#multJavaBooleanWithNumber",
        "com.googlecode.aviator.runtime.function.seq.SeqReduceFunctionUnitTest#testReduce_Array",
        "com.googlecode.aviator.AviatorEvaluatorInstanceUnitTest#testFunctionMissing",
        "com.googlecode.aviator.test.function.GrammarUnitTest#testNullPointerException",
        "com.googlecode.aviator.test.function.FunctionTest#testSeqNewList",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testParseReduceFunction",
        "com.googlecode.aviator.runtime.type.AviatorJavaTypeUnitTest#addJavaNumberWithJavaBoolean",
        "com.googlecode.aviator.utils.SyncLRUMapUnitTest#concurrentTest",
        "com.googlecode.aviator.runtime.type.AviatorBooleanUnitTest#testCompareJavaType",
        "com.googlecode.aviator.runtime.function.math.MathCosFunctionUnitTest#testClassCastError2",
        "com.googlecode.aviator.lexer.ExpressionLexerUnitTest#testParseScientificNotation8",
        "com.googlecode.aviator.code.asm.ASMCodeGeneratorUnitTest#testOnMult",
        "com.googlecode.aviator.runtime.function.custom.CustomFunctionUnitTest#testGetFirstNonNullFunctionWith101Params",
        "com.googlecode.aviator.runtime.function.string.StringIndexOfFunctionUnitTest#testNullPointerException2",
        "com.googlecode.aviator.code.asm.ASMCodeGeneratorUnitTest#testOnGt",
        "com.googlecode.aviator.runtime.function.seq.SeqMapFunctionUnitTest#testMap_String",
        "com.googlecode.aviator.runtime.type.AviatorJavaTypeUnitTest#testAddJavaString",
        "com.googlecode.aviator.runtime.function.system.BinaryFunctionUnitTest#testModFunction",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testParsePattern",
        "com.googlecode.aviator.code.asm.ASMCodeGeneratorUnitTest#testOnConstant_Double",
        "com.googlecode.aviator.runtime.function.FunctionUtilsUnitTest#testGetFunction_Normal",
        "com.googlecode.aviator.test.function.FunctionTest#testOtherFunction",
        "com.googlecode.aviator.runtime.type.AviatorNumberUnitTest#testCompareWithJavaType",
        "com.googlecode.aviator.lexer.ExpressionLexerUnitTest#testIllegalNumber1",
        "com.googlecode.aviator.test.function.FunctionTest#testIdentityFunction",
        "com.googlecode.aviator.test.function.QuoteVarTest#testQuoteVar",
        "com.googlecode.aviator.runtime.type.AviatorJavaTypeUnitTest#subJavaBooleanWithNumber",
        "com.googlecode.aviator.runtime.type.AviatorNumberUnitTest#testSubWithNumber",
        "com.googlecode.aviator.runtime.type.AviatorNumberUnitTest#testNeg",
        "com.googlecode.aviator.runtime.function.system.BinaryFunctionUnitTest#testSubFunction",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testInvalidExpression2",
        "com.googlecode.aviator.runtime.type.AviatorJavaTypeUnitTest#testNeg",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testInvalidExpression1",
        "com.googlecode.aviator.runtime.type.AviatorJavaTypeUnitTest#multJavaNumberWithJavaBoolean",
        "com.googlecode.aviator.runtime.function.seq.SeqReduceFunctionUnitTest#testReduce_Map",
        "com.googlecode.aviator.runtime.function.math.MathCosFunctionUnitTest#test_TwoArugments",
        "com.googlecode.aviator.test.function.OperatorFunctionTest#testCustomArrayIndexOperator",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testLambda1",
        "com.googlecode.aviator.AviatorEvaluatorInstanceUnitTest#testImportAnnotation",
        "com.googlecode.aviator.runtime.function.string.StringSubstringWithFunctionUnitTest#testIllegalArguments_one",
        "com.googlecode.aviator.runtime.type.AviatorJavaTypeUnitTest#modJavaNumberWithJavaBoolean",
        "com.googlecode.aviator.runtime.function.system.NowFunctionUnitTest#testCall",
        "com.googlecode.aviator.test.function.GrammarUnitTest#testIllegalArrayIndexAccessWithMethod2",
        "com.googlecode.aviator.test.function.GrammarUnitTest#testType",
        "com.googlecode.aviator.test.function.FunctionTest#testSystemMinMaxFunction",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testArrayAccess_Illegal2",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testParseIllegalGroup1",
        "com.googlecode.aviator.test.function.FunctionTest#testCaptureFunctionParams2",
        "com.googlecode.aviator.lexer.ExpressionLexerUnitTest#testParseScientificNotation7",
        "com.googlecode.aviator.runtime.function.math.MathSinFunctionUnitTest#testClassCastError1",
        "com.googlecode.aviator.runtime.type.AviatorNumberUnitTest#testAddWithString",
        "com.googlecode.aviator.runtime.function.math.MathPowFunctionUnitTest#testClassCastError2",
        "com.googlecode.aviator.runtime.type.AviatorStringUnitTest#testAddBoolean",
        "com.googlecode.aviator.runtime.function.seq.SeqCountFunctionUnitTest#testCount_String",
        "com.googlecode.aviator.runtime.type.AviatorStringUnitTest#testAddJavaType",
        "com.googlecode.aviator.runtime.function.system.PrintlnFunctionUnitTest#testCall_WithEmpyArguments",
        "com.googlecode.aviator.runtime.function.string.StringSplitJointFunctionUnitTest#testJoinWithCollection",
        "com.googlecode.aviator.AviatorEvaluatorInstanceUnitTest#evaluatorWithCache",
        "com.googlecode.aviator.runtime.function.system.BinaryFunctionUnitTest#testDivFunction",
        "com.googlecode.aviator.test.function.GrammarUnitTest#testFunctionCall",
        "com.googlecode.aviator.runtime.function.string.StringIndexOfFunctionUnitTest#testNullPointerException1",
        "com.googlecode.aviator.code.asm.ASMCodeGeneratorUnitTest#testOnDiv",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testLambdaMissingArrow",
        "com.googlecode.aviator.runtime.type.AviatorNumberUnitTest#testMultWithNumber",
        "com.googlecode.aviator.runtime.function.math.MathSqrtFunctionUnitTest#testZeroArgument",
        "com.googlecode.aviator.runtime.function.math.MathTanFunctionUnitTest#testClassCastError2",
        "com.googlecode.aviator.AviatorEvaluatorInstanceUnitTest#testSetOptions",
        "com.googlecode.aviator.code.asm.ASMCodeGeneratorUnitTest#testOnEq",
        "com.googlecode.aviator.test.function.FunctionTest#testLogicExpression",
        "com.googlecode.aviator.runtime.type.AviatorJavaTypeUnitTest#divJavaNumberWithJavaBoolean",
        "com.googlecode.aviator.code.asm.ASMCodeGeneratorUnitTest#testOnBitOr",
        "com.googlecode.aviator.runtime.function.math.MathTanFunctionUnitTest#testCall",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testIssue77",
        "com.googlecode.aviator.test.function.GrammarUnitTest#testMultOperandsLimit",
        "com.googlecode.aviator.runtime.function.math.MathAbsFunctionUnitTest#test_TwoArugments",
        "com.googlecode.aviator.runtime.function.seq.SeqSortFunctionUnitTest#testSort_List",
        "com.googlecode.aviator.AviatorEvaluatorInstanceUnitTest#testInstanceOptions",
        "com.googlecode.aviator.test.function.GrammarUnitTest#testIllegalArrayIndexAccessWithMethod1",
        "com.googlecode.aviator.runtime.type.AviatorStringUnitTest#testCompareJavaString",
        "com.googlecode.aviator.code.asm.ASMCodeGeneratorUnitTest#testOnBitNot1",
        "com.googlecode.aviator.runtime.function.seq.SeqSortFunctionUnitTest#testSort_Array",
        "com.googlecode.aviator.runtime.function.math.MathLogFunctionUnitTest#test_TwoArugments",
        "com.googlecode.aviator.runtime.type.AviatorBooleanUnitTest#testAddJavaType",
        "com.googlecode.aviator.runtime.type.AviatorNumberUnitTest#testSubWithOtherType2",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testTernaryWithIllegalParen2",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testInvalidExpression3",
        "com.googlecode.aviator.test.function.FunctionTest#testSeqContainsKey",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testBitOr",
        "com.googlecode.aviator.runtime.function.string.StringEndsWithFunctionUnitTest#testClassCastError1",
        "com.googlecode.aviator.runtime.function.math.MathSqrtFunctionUnitTest#test_TwoArugments",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testLambda2",
        "com.googlecode.aviator.runtime.type.AviatorNumberUnitTest#testSubWithJavaType",
        "com.googlecode.aviator.AviatorEvaluatorUnitTest#testDefaultOptionValues",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testParseExpression_IllegalParens2",
        "com.googlecode.aviator.test.function.GrammarUnitTest#testAssignment1",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testIllegalTernary3",
        "com.googlecode.aviator.runtime.function.system.PrintlnFunctionUnitTest#testCall_WithFourArgument",
        "com.googlecode.aviator.runtime.function.system.RandomFunctionUnitTest#testCallIllegalArgument",
        "com.googlecode.aviator.lexer.ExpressionLexerUnitTest#testParseScientificNotation5",
        "com.googlecode.aviator.runtime.function.system.RandomFunctionUnitTest#testCall",
        "com.googlecode.aviator.runtime.function.math.MathSqrtFunctionUnitTest#testCall",
        "com.googlecode.aviator.runtime.function.custom.CustomFunctionUnitTest#testGetFirstNonNullFunctionWith20Params",
        "com.googlecode.aviator.runtime.type.AviatorBooleanUnitTest#testCompareBoolean",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testMultiDimensionalArrayAccess2",
        "com.googlecode.aviator.AviatorEvaluatorInstanceUnitTest#compileBlankExpression2",
        "com.googlecode.aviator.code.asm.ASMCodeGeneratorUnitTest#testOnShiftRight",
        "com.googlecode.aviator.runtime.function.math.MathTanFunctionUnitTest#testNullPointer",
        "com.googlecode.aviator.test.function.FunctionTest#testOperatorPrecedence",
        "com.googlecode.aviator.runtime.function.string.StringSubstringWithFunctionUnitTest#testNullPointerException1",
        "com.googlecode.aviator.code.asm.ASMCodeGeneratorUnitTest#testOnAnd_True",
        "com.googlecode.aviator.runtime.function.custom.CustomFunctionUnitTest#testMyAddFunction",
        "com.googlecode.aviator.runtime.function.math.MathTanFunctionUnitTest#test_TwoArugments",
        "com.googlecode.aviator.test.function.GrammarUnitTest#testCompareNumber",
        "com.googlecode.aviator.code.asm.ASMCodeGeneratorUnitTest#testOnBitXor",
        "com.googlecode.aviator.code.asm.ASMCodeGeneratorUnitTest#testOnConstant_Boolean_False",
        "com.googlecode.aviator.runtime.function.string.StringSubstringWithFunctionUnitTest#testClassCastError2",
        "com.googlecode.aviator.runtime.type.AviatorBooleanUnitTest#testNot",
        "com.googlecode.aviator.code.asm.ASMCodeGeneratorUnitTest#testOnMod",
        "com.googlecode.aviator.runtime.type.AviatorBooleanUnitTest#testCompareNumber",
        "com.googlecode.aviator.runtime.function.math.MathRoundFunctionUnitTest#test_TwoArugments",
        "com.googlecode.aviator.runtime.function.system.NowFunctionUnitTest#testCall_WithOneArgument",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testLambdaMissingEnd",
        "com.googlecode.aviator.runtime.type.AviatorJavaTypeUnitTest#multJavaBooleanWithJavaNumber",
        "com.googlecode.aviator.runtime.type.AviatorJavaTypeUnitTest#testCompareDate",
        "com.googlecode.aviator.lexer.ExpressionLexerUnitTest#testExpression_WithString",
        "com.googlecode.aviator.runtime.function.string.StringIndexOfFunctionUnitTest#testClassCastError1",
        "com.googlecode.aviator.test.function.FunctionTest#testStringFunction",
        "com.googlecode.aviator.runtime.function.seq.SeqPredicateFunctionUnitTest#testPredicate_gt",
        "com.googlecode.aviator.runtime.function.string.StringLengthFunctionUnitTest#testNullPointerException1",
        "com.googlecode.aviator.runtime.function.string.StringSplitJointFunctionUnitTest#testSplitJoin",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testIllegalIdentifier2",
        "com.googlecode.aviator.AviatorEvaluatorInstanceUnitTest#executeBlankExpression1",
        "com.googlecode.aviator.AviatorEvaluatorInstanceUnitTest#testImportFunctions",
        "com.googlecode.aviator.runtime.type.AviatorNumberUnitTest#testDivWithNumber",
        "com.googlecode.aviator.lexer.ExpressionLexerUnitTest#testSimpleExpression",
        "com.googlecode.aviator.test.function.FunctionTest#testArrayAccess",
        "com.googlecode.aviator.code.asm.ASMCodeGeneratorUnitTest#testOnShiftLeft",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testStatement1",
        "com.googlecode.aviator.runtime.function.seq.SeqReduceFunctionUnitTest#testReduce_Collection",
        "com.googlecode.aviator.AviatorEvaluatorUnitTest#compileBlankExpression2",
        "com.googlecode.aviator.runtime.type.AviatorJavaTypeUnitTest#testGetElement_IllegalTarget2",
        "com.googlecode.aviator.AviatorEvaluatorInstanceUnitTest#testCompileCache",
        "com.googlecode.aviator.runtime.function.seq.SeqFilterFunctionUnitTest#testFilter_Collection",
        "com.googlecode.aviator.runtime.function.seq.SeqIncludeFunctionUnitTest#testInclude_Array",
        "com.googlecode.aviator.test.function.GrammarUnitTest#testDivOperandsLimit",
        "com.googlecode.aviator.runtime.function.seq.SeqCountFunctionUnitTest#testCount_Array",
        "com.googlecode.aviator.runtime.function.system.PrintFunctionUnitTest#testCall_WithFourArgument",
        "com.googlecode.aviator.AviatorEvaluatorInstanceUnitTest#testInvalidateCache",
        "com.googlecode.aviator.spring.SringContextFunctionLoaderTest#testAdd",
        "com.googlecode.aviator.runtime.type.AviatorBooleanUnitTest#testAddJavaChar",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testArrayAccess_Illegal4",
        "com.googlecode.aviator.test.function.FunctionTest#testSeqContainsKeyWrongType",
        "com.googlecode.aviator.test.function.FunctionTest#testSeqFunction",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testComplexLogicExpression",
        "com.googlecode.aviator.runtime.type.AviatorNumberUnitTest#testMultWithOtherType2",
        "com.googlecode.aviator.runtime.function.math.MathAbsFunctionUnitTest#testZeroArgument",
        "com.googlecode.aviator.runtime.type.AviatorStringUnitTest#testAddNumber",
        "com.googlecode.aviator.runtime.type.AviatorJavaTypeUnitTest#testAddWithNumber",
        "com.googlecode.aviator.runtime.function.string.StringReplaceFunctionUnitTest#testReplaceAll",
        "com.googlecode.aviator.runtime.type.AviatorNilUnitTest#testCompare",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testIllegalIdentifier1",
        "com.googlecode.aviator.lexer.ExpressionLexerUnitTest#testBlank_SpaceExpression",
        "com.googlecode.aviator.runtime.function.math.MathRoundFunctionUnitTest#testNullPointer",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testIllegalIdentifier3",
        "com.googlecode.aviator.runtime.function.string.StringLengthFunctionUnitTest#testIllegalArguments_Three",
        "com.googlecode.aviator.runtime.type.AviatorJavaTypeUnitTest#testGetElement_IllegalTarget1",
        "com.googlecode.aviator.AviatorEvaluatorUnitTest#evaluatorWithCache",
        "com.googlecode.aviator.lexer.ExpressionLexerUnitTest#testExpression_Eq",
        "com.googlecode.aviator.test.function.FunctionTest#testBigNumber",
        "com.googlecode.aviator.test.function.GrammarUnitTest#testNilObject",
        "com.googlecode.aviator.lexer.ExpressionLexerUnitTest#testExpressionHasPattern2",
        "com.googlecode.aviator.runtime.function.seq.SeqFilterFunctionUnitTest#testFilter_Array",
        "com.googlecode.aviator.test.function.GrammarUnitTest#testStatement",
        "com.googlecode.aviator.runtime.type.AviatorJavaTypeUnitTest#divJavaBooleanWithNumber",
        "com.googlecode.aviator.test.function.FunctionTest#testBigNumberNegative",
        "com.googlecode.aviator.test.function.FunctionTest#testMathFunction",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testBitAndNot",
        "com.googlecode.aviator.AviatorEvaluatorInstanceUnitTest#testSetNullMathContext",
        "com.googlecode.aviator.lexer.ExpressionLexerUnitTest#testParseBigNumber",
        "com.googlecode.aviator.runtime.type.AviatorNumberUnitTest#testAddWithOtherType1",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testIllegalExpression2",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testParseSeqFunction",
        "com.googlecode.aviator.AviatorEvaluatorInstanceUnitTest#testTraceEval",
        "com.googlecode.aviator.runtime.function.string.StringContainsFunctionUnitTest#testCall",
        "com.googlecode.aviator.runtime.function.math.MathSinFunctionUnitTest#testZeroArgument",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testTernary1",
        "com.googlecode.aviator.runtime.function.system.SysDateFunctionUnitTest#hasArugment",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testIllegalExpression6",
        "com.googlecode.aviator.code.asm.ASMCodeGeneratorUnitTest#testOnNeg_Double",
        "com.googlecode.aviator.runtime.function.FunctionUtilsUnitTest#testGetFunction_sub",
        "com.googlecode.aviator.runtime.type.AviatorPatternUnitTest#testAddJavaNumber",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testParseExpression_WithManyParens1",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testTernary2",
        "com.googlecode.aviator.test.function.FunctionTest#testSeqNewSet",
        "com.googlecode.aviator.code.asm.ASMCodeGeneratorUnitTest#testOnNeq",
        "com.googlecode.aviator.test.function.FunctionTest#testCaptureFunctionParams1",
        "com.googlecode.aviator.test.function.FunctionTest#testSeqFilterMapWithProperty",
        "com.googlecode.aviator.runtime.type.AviatorStringUnitTest#testCompareBoolean",
        "com.googlecode.aviator.AviatorEvaluatorUnitTest#testCompileWithoutCache",
        "com.googlecode.aviator.runtime.function.math.MathLog10FunctionUnitTest#test_TwoArugments",
        "com.googlecode.aviator.runtime.function.math.MathLogFunctionUnitTest#testZeroArgument",
        "com.googlecode.aviator.runtime.function.math.MathAbsFunctionUnitTest#testClassCastError1",
        "com.googlecode.aviator.test.function.FunctionTest#testDecimalBitAnd",
        "com.googlecode.aviator.lexer.ExpressionLexerUnitTest#testSimpleExpression_WithSpace",
        "com.googlecode.aviator.test.function.GrammarUnitTest#testNil",
        "com.googlecode.aviator.AviatorEvaluatorInstanceUnitTest#testDefaultOptionValues",
        "com.googlecode.aviator.code.asm.ASMCodeGeneratorUnitTest#testOnMatch",
        "com.googlecode.aviator.AviatorEvaluatorInstanceUnitTest#testDisableAssignment",
        "com.googlecode.aviator.runtime.type.AviatorNumberUnitTest#testSubWithOtherType1",
        "com.googlecode.aviator.runtime.function.system.BinaryFunctionUnitTest#testAddFunction",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testArrayAccess",
        "com.googlecode.aviator.test.function.GrammarUnitTest#testIssue162",
        "com.googlecode.aviator.runtime.function.system.BinaryFunctionUnitTest#testNegFunction",
        "com.googlecode.aviator.lexer.ExpressionLexerUnitTest#testParseScientificNotation6",
        "com.googlecode.aviator.test.function.GrammarUnitTest#testLogicAnd",
        "com.googlecode.aviator.lexer.ExpressionLexerUnitTest#testParseScientificNotationBiggerSmaller",
        "com.googlecode.aviator.AviatorEvaluatorInstanceUnitTest#compileBlankExpression1",
        "com.googlecode.aviator.LambdaUnitTest#testLambdaClosure",
        "com.googlecode.aviator.runtime.function.seq.SeqPredicateFunctionUnitTest#testPredicate_property",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testParseExpression_WithOneParen",
        "com.googlecode.aviator.lexer.ExpressionLexerUnitTest#testParseScientificNotation2",
        "com.googlecode.aviator.runtime.function.seq.SeqMapFunctionUnitTest#testCount_Collection",
        "com.googlecode.aviator.runtime.function.system.BinaryFunctionUnitTest#testMultFunction",
        "com.googlecode.aviator.runtime.function.seq.SeqReduceFunctionUnitTest#testReduce_NullArray",
        "com.googlecode.aviator.runtime.type.AviatorStringUnitTest#testCompareNullString",
        "com.googlecode.aviator.runtime.type.AviatorPatternUnitTest#testMatchBoolean",
        "com.googlecode.aviator.runtime.type.AviatorJavaTypeUnitTest#testNot",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testLambda3",
        "com.googlecode.aviator.runtime.function.math.MathLogFunctionUnitTest#testClassCastError2",
        "com.googlecode.aviator.runtime.function.system.PrintlnFunctionUnitTest#testCall_WithTwoArgument",
        "com.googlecode.aviator.lexer.ExpressionLexerUnitTest#testParseScientificNotation3",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testParseExpression_IllegalParens4",
        "com.googlecode.aviator.runtime.type.AviatorStringUnitTest#testAddNil",
        "com.googlecode.aviator.runtime.function.math.MathLog10FunctionUnitTest#testNullPointer",
        "com.googlecode.aviator.test.function.GrammarUnitTest#testTypeConversation",
        "com.googlecode.aviator.runtime.function.math.MathLogFunctionUnitTest#testCall",
        "com.googlecode.aviator.test.function.FunctionTest#testIssue134",
        "com.googlecode.aviator.test.function.FunctionTest#testBigNumberBitOperations",
        "com.googlecode.aviator.test.function.GrammarUnitTest#testNotOperandLimit",
        "com.googlecode.aviator.lexer.ExpressionLexerUnitTest#testScanHasLine",
        "com.googlecode.aviator.AviatorEvaluatorUnitTest#executeBlankExpression1",
        "com.googlecode.aviator.runtime.type.AviatorNumberUnitTest#testModWithOtherType1",
        "com.googlecode.aviator.test.function.GrammarUnitTest#testLogicOr",
        "com.googlecode.aviator.runtime.function.seq.SeqIncludeFunctionUnitTest#testInclude_String",
        "com.googlecode.aviator.runtime.type.AviatorNumberUnitTest#testModWithNumber",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testParseFunctionParams",
        "com.googlecode.aviator.runtime.function.math.MathAbsFunctionUnitTest#testClassCastError2",
        "com.googlecode.aviator.test.function.FunctionTest#testBitOp_BitMap",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testIllegalStatement3",
        "com.googlecode.aviator.runtime.function.system.PrintFunctionUnitTest#testCall_WithEmpyArguments",
        "com.googlecode.aviator.runtime.function.custom.CustomFunctionUnitTest#testGetFirstNonNullFunctionWith21Params",
        "com.googlecode.aviator.code.asm.ASMCodeGeneratorUnitTest#testOnAdd",
        "com.googlecode.aviator.lexer.ExpressionLexerUnitTest#testQuoteVar",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testStatement2",
        "com.googlecode.aviator.runtime.type.AviatorNumberUnitTest#testAddWithJavaType",
        "com.googlecode.aviator.runtime.function.math.MathSqrtFunctionUnitTest#testNullPointer",
        "com.googlecode.aviator.test.function.FunctionTest#testSeqMinMaxFunction",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testArrayAccessNested2",
        "com.googlecode.aviator.runtime.function.string.StringSubstringWithFunctionUnitTest#testClassCastError1",
        "com.googlecode.aviator.runtime.type.AviatorPatternUnitTest#testCompareString",
        "com.googlecode.aviator.code.asm.ASMCodeGeneratorUnitTest#testOnSub",
        "com.googlecode.aviator.runtime.type.AviatorPatternUnitTest#testAddPattern",
        "com.googlecode.aviator.runtime.function.math.MathTanFunctionUnitTest#testZeroArgument",
        "com.googlecode.aviator.LambdaUnitTest#testLambdaWithHighOrderFunction",
        "com.googlecode.aviator.runtime.function.system.PrintFunctionUnitTest#testCall_WithOneArgument",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testParseExpression_WithManyParens2",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testArrayAccessNested1",
        "com.googlecode.aviator.runtime.function.math.MathPowFunctionUnitTest#testZeroArgument",
        "com.googlecode.aviator.test.function.FunctionTest#testBitOperations",
        "com.googlecode.aviator.runtime.function.seq.SeqMapFunctionUnitTest#testMap_Array",
        "com.googlecode.aviator.runtime.type.AviatorPatternUnitTest#testNot",
        "com.googlecode.aviator.runtime.function.system.String2DateFunctionUnitTest#testCall",
        "com.googlecode.aviator.LambdaUnitTest#testLambdaScope",
        "com.googlecode.aviator.code.asm.ASMCodeGeneratorUnitTest#testOnLt",
        "com.googlecode.aviator.runtime.function.math.MathSinFunctionUnitTest#testClassCastError2",
        "com.googlecode.aviator.runtime.function.math.MathPowFunctionUnitTest#testClassCastError1",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testParseBlankExpression3",
        "com.googlecode.aviator.lexer.ExpressionLexerUnitTest#testExpression_WithIllegalDouble",
        "com.googlecode.aviator.test.function.FunctionTest#testPropertyNilNotFound",
        "com.googlecode.aviator.AviatorEvaluatorUnitTest#testSetNullMathContext",
        "com.googlecode.aviator.code.asm.ASMCodeGeneratorUnitTest#testOnJoin_False",
        "com.googlecode.aviator.runtime.type.AviatorJavaTypeUnitTest#testGetElement_IllegalArgument1",
        "com.googlecode.aviator.AviatorEvaluatorUnitTest#testExec",
        "com.googlecode.aviator.test.function.GrammarUnitTest#testNegOperandLimit",
        "com.googlecode.aviator.utils.SyncLRUMapUnitTest#testPutGet",
        "com.googlecode.aviator.runtime.type.AviatorStringUnitTest#testCompareDate",
        "com.googlecode.aviator.code.asm.ASMCodeGeneratorUnitTest#testOnNeg_Long",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testParseComplexPattern",
        "com.googlecode.aviator.runtime.function.string.StringLengthFunctionUnitTest#testClassCastError1",
        "com.googlecode.aviator.runtime.function.system.String2DateFunctionUnitTest#testCall_NotDate",
        "com.googlecode.aviator.test.function.GrammarUnitTest#testIssue175",
        "com.googlecode.aviator.runtime.type.AviatorStringUnitTest#testNeg",
        "com.googlecode.aviator.runtime.type.AviatorStringUnitTest#testAddString",
        "com.googlecode.aviator.code.asm.ASMCodeGeneratorUnitTest#testOnConstant_Long",
        "com.googlecode.aviator.test.function.FunctionTest#testGetVariableNames",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testInvalidExpression4",
        "com.googlecode.aviator.test.function.FunctionTest#testArithmeticExpressionWithVariable",
        "com.googlecode.aviator.code.asm.ASMCodeGeneratorUnitTest#testOnJoin_True",
        "com.googlecode.aviator.test.function.FunctionTest#testSeqFilterListWithProperty",
        "com.googlecode.aviator.runtime.type.AviatorJavaTypeUnitTest#subJavaNumberWithJavaBoolean",
        "com.googlecode.aviator.test.function.FunctionTest#testTuple",
        "com.googlecode.aviator.lexer.ExpressionLexerUnitTest#testParseIntegralAsDecimal",
        "com.googlecode.aviator.runtime.function.string.StringLengthFunctionUnitTest#testIllegalArguments_zero",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testParseMorePattern",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testParseBlankExpression2",
        "com.googlecode.aviator.runtime.function.system.Date2StringFunctionUnitTest#testCall",
        "com.googlecode.aviator.test.function.GrammarUnitTest#testIssue87",
        "com.googlecode.aviator.AviatorEvaluatorInstanceUnitTest#testAddStaticFunctions",
        "com.googlecode.aviator.runtime.type.AviatorPatternUnitTest#testCompareBoolean",
        "com.googlecode.aviator.utils.LRUMapUnitTest#testLRU",
        "com.googlecode.aviator.runtime.function.string.StringEndsWithFunctionUnitTest#testIllegalArguments_null",
        "com.googlecode.aviator.test.function.GrammarUnitTest#testModOperandsLimit",
        "com.googlecode.aviator.code.asm.ASMCodeGeneratorUnitTest#testOnConstant_Pattern",
        "com.googlecode.aviator.runtime.type.AviatorStringUnitTest#testComparePattern",
        "com.googlecode.aviator.runtime.type.AviatorNumberUnitTest#testCompareWithNumber",
        "com.googlecode.aviator.SimpleELPerformanceTest#test_perf",
        "com.googlecode.aviator.runtime.function.string.StringSubstringWithFunctionUnitTest#testIllegalArguments_Three",
        "com.googlecode.aviator.runtime.type.AviatorPatternUnitTest#testMatchString",
        "com.googlecode.aviator.lexer.ExpressionLexerUnitTest#testExpression_True_False",
        "com.googlecode.aviator.test.function.FunctionTest#testParseScientificNotations",
        "com.googlecode.aviator.runtime.type.AviatorJavaTypeUnitTest#addJavaBooleanWithJavaNumber",
        "com.googlecode.aviator.code.asm.ASMCodeGeneratorUnitTest#testOnNot_False",
        "com.googlecode.aviator.runtime.function.math.MathRoundFunctionUnitTest#testClassCastError1",
        "com.googlecode.aviator.runtime.type.AviatorPatternUnitTest#testAddJavaDate",
        "com.googlecode.aviator.runtime.type.AviatorPatternUnitTest#testMatchPattern",
        "com.googlecode.aviator.runtime.function.seq.SeqPredicateFunctionUnitTest#testPredicate_ge",
        "com.googlecode.aviator.runtime.function.system.PrintlnFunctionUnitTest#testCall_WithOneArgument",
        "com.googlecode.aviator.runtime.function.string.StringSubstringWithFunctionUnitTest#testIllegalArguments_null",
        "com.googlecode.aviator.runtime.function.math.MathRoundFunctionUnitTest#testZeroArgument",
        "com.googlecode.aviator.AviatorEvaluatorInstanceUnitTest#evaluatorWithoutCache",
        "com.googlecode.aviator.AviatorEvaluatorUnitTest#testInvalidateCache",
        "com.googlecode.aviator.runtime.function.math.MathCosFunctionUnitTest#testZeroArgument",
        "com.googlecode.aviator.runtime.function.string.StringIndexOfFunctionUnitTest#testCall",
        "com.googlecode.aviator.lexer.ExpressionLexerUnitTest#testParseBigDecimal",
        "com.googlecode.aviator.lexer.ExpressionLexerUnitTest#testParseDoubleAsDecimal",
        "com.googlecode.aviator.test.function.GrammarUnitTest#testAddOperandsLimit",
        "com.googlecode.aviator.test.function.GrammarUnitTest#testIssue92",
        "com.googlecode.aviator.runtime.function.math.MathRoundFunctionUnitTest#testClassCastError2",
        "com.googlecode.aviator.runtime.type.AviatorJavaTypeUnitTest#testDivWithNumber",
        "com.googlecode.aviator.runtime.type.AviatorStringUnitTest#testCompareJavaNull",
        "com.googlecode.aviator.code.asm.ASMCodeGeneratorUnitTest#testOnGe",
        "com.googlecode.aviator.runtime.function.seq.SeqReduceFunctionUnitTest#testReduce_String",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testParsePatternWithOtherExpression",
        "com.googlecode.aviator.test.function.GrammarUnitTest#testIndex",
        "com.googlecode.aviator.runtime.function.string.StringEndsWithFunctionUnitTest#testClassCastError2",
        "com.googlecode.aviator.runtime.type.AviatorStringUnitTest#testAddPattern",
        "com.googlecode.aviator.runtime.function.math.MathLogFunctionUnitTest#testClassCastError1",
        "com.googlecode.aviator.runtime.type.AviatorNumberUnitTest#testDivWithOtherType2",
        "com.googlecode.aviator.runtime.type.AviatorNumberUnitTest#testAddWithNumber",
        "com.googlecode.aviator.runtime.type.AviatorNumberUnitTest#testNot",
        "com.googlecode.aviator.runtime.type.AviatorJavaTypeUnitTest#addJavaBooleanWithNumber",
        "com.googlecode.aviator.AviatorEvaluatorUnitTest#executeBlankExpression2",
        "com.googlecode.aviator.runtime.function.seq.SeqPredicateFunctionUnitTest#testPredicate_IllegalOperator",
        "com.googlecode.aviator.AviatorEvaluatorInstanceUnitTest#testInstanceCustomFunctions",
        "com.googlecode.aviator.AviatorEvaluatorUnitTest#testSetOptions",
        "com.googlecode.aviator.test.function.GrammarUnitTest#testSubOperandsLimit",
        "com.googlecode.aviator.runtime.type.AviatorJavaTypeUnitTest#testSubWithNumber",
        "com.googlecode.aviator.lexer.ExpressionLexerUnitTest#testParseScientificNotation4",
        "com.googlecode.aviator.lexer.ExpressionLexerUnitTest#testParseHexNumber",
        "com.googlecode.aviator.runtime.function.seq.SeqPredicateFunctionUnitTest#testPredicate_neq",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testParseExpression_IllegalParens3",
        "com.googlecode.aviator.runtime.type.AviatorPatternUnitTest#testMatchNumber",
        "com.googlecode.aviator.runtime.type.AviatorJavaTypeUnitTest#testModWithNumber",
        "com.googlecode.aviator.AviatorEvaluatorInstanceUnitTest#testNewInstance",
        "com.googlecode.aviator.runtime.function.math.MathSinFunctionUnitTest#test_TwoArugments",
        "com.googlecode.aviator.runtime.type.AviatorBooleanUnitTest#testAddString",
        "com.googlecode.aviator.runtime.function.math.MathCosFunctionUnitTest#testCall",
        "com.googlecode.aviator.parser.AviatorClassLoaderUnitTest#testManyManyExpressions",
        "com.googlecode.aviator.test.function.GrammarUnitTest#testIllegalStatement2",
        "com.googlecode.aviator.runtime.type.AviatorStringUnitTest#testCompareJavaChar",
        "com.googlecode.aviator.runtime.function.string.StringContainsFunctionUnitTest#testNullPointerException1",
        "com.googlecode.aviator.LambdaUnitTest#testIssue101_assignment",
        "com.googlecode.aviator.code.asm.ASMCodeGeneratorUnitTest#testOnBitAnd",
        "com.googlecode.aviator.AviatorEvaluatorInstanceUnitTest#executeBlankExpression2",
        "com.googlecode.aviator.runtime.type.AviatorNumberUnitTest#testCompareWithJavaString",
        "com.googlecode.aviator.runtime.type.AviatorPatternUnitTest#testComparePattern",
        "com.googlecode.aviator.runtime.function.system.Date2StringFunctionUnitTest#testCall_NotDate",
        "com.googlecode.aviator.AviatorEvaluatorInstanceUnitTest#testInstanceCustomOperator",
        "com.googlecode.aviator.runtime.type.AviatorNumberUnitTest#testModWithJavaType",
        "com.googlecode.aviator.runtime.type.AviatorJavaTypeUnitTest#compareWithAviatorType",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testPattern_Escape",
        "com.googlecode.aviator.runtime.type.AviatorJavaTypeUnitTest#subJavaBooleanWithJavaNumber",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testAssignment",
        "com.googlecode.aviator.test.function.OperatorFunctionTest#testCustomUnaryOperatorFunction",
        "com.googlecode.aviator.test.function.GrammarUnitTest#testMatchWithFlags",
        "com.googlecode.aviator.lexer.ExpressionLexerUnitTest#testParseNumbers",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testIllegalTernary1",
        "com.googlecode.aviator.lexer.ExpressionLexerUnitTest#testExpression_WithNestedString",
        "com.googlecode.aviator.AviatorEvaluatorUnitTest#testCompileCache",
        "com.googlecode.aviator.lexer.ExpressionLexerUnitTest#testExpression_Logic_Join",
        "com.googlecode.aviator.lexer.ExpressionLexerUnitTest#testPushBack",
        "com.googlecode.aviator.code.asm.ASMCodeGeneratorUnitTest#testOnBitNot2",
        "com.googlecode.aviator.runtime.type.AviatorPatternUnitTest#testMatchJavaString",
        "com.googlecode.aviator.test.function.FunctionTest#testLogicExpressionWithVariable",
        "com.googlecode.aviator.runtime.type.AviatorStringUnitTest#testCompareJavaNumber",
        "com.googlecode.aviator.runtime.function.seq.SeqCountFunctionUnitTest#testCount_Collection",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testParseFunctionNested",
        "com.googlecode.aviator.runtime.type.AviatorJavaTypeUnitTest#testGetElement",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testParseExpression_WithIllegalParen2",
        "com.googlecode.aviator.runtime.function.system.SysDateFunctionUnitTest#testCall",
        "com.googlecode.aviator.runtime.function.string.StringEndsWithFunctionUnitTest#testNullPointerException1",
        "com.googlecode.aviator.test.function.FunctionTest#testSystemFunction",
        "com.googlecode.aviator.runtime.function.string.StringIndexOfFunctionUnitTest#testIllegalArguments_one",
        "com.googlecode.aviator.runtime.function.math.MathLog10FunctionUnitTest#testZeroArgument",
        "com.googlecode.aviator.test.function.GrammarUnitTest#testCompareString",
        "com.googlecode.aviator.lexer.ExpressionLexerUnitTest#testParseLikeHexNumber",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testTernaryWithParen1",
        "com.googlecode.aviator.runtime.function.math.MathPowFunctionUnitTest#test_OneArugments",
        "com.googlecode.aviator.code.asm.ASMCodeGeneratorUnitTest#testOnLambdaDefine",
        "com.googlecode.aviator.runtime.type.AviatorNumberUnitTest#testAddWithOtherType2",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testParseFunction",
        "com.googlecode.aviator.runtime.function.math.MathAbsFunctionUnitTest#testNullPointer",
        "com.googlecode.aviator.AviatorEvaluatorInstanceUnitTest#testAnnotations",
        "com.googlecode.aviator.runtime.type.AviatorBooleanUnitTest#testAddJavaString",
        "com.googlecode.aviator.runtime.function.seq.SeqFilterFunctionUnitTest#testFilter_map",
        "com.googlecode.aviator.runtime.type.AviatorPatternUnitTest#testPatternGroup",
        "com.googlecode.aviator.lexer.ExpressionLexerUnitTest#testExpressionWithParen",
        "com.googlecode.aviator.test.function.GrammarUnitTest#testScientificNotationBiggerSmaller",
        "com.googlecode.aviator.test.function.GrammarUnitTest#testArrayIndexAccessWithMethodAndBracket",
        "com.googlecode.aviator.code.asm.ASMCodeGeneratorUnitTest#testOnLe",
        "com.googlecode.aviator.utils.LRUMapUnitTest#testPutGet",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testBitAnd",
        "com.googlecode.aviator.runtime.function.string.StringLengthFunctionUnitTest#testClassCastError2",
        "com.googlecode.aviator.runtime.function.string.StringEndsWithFunctionUnitTest#testIllegalArguments_one",
        "com.googlecode.aviator.lexer.ExpressionLexerUnitTest#testParseScientificNotation1",
        "com.googlecode.aviator.runtime.function.math.MathCosFunctionUnitTest#testNullPointer",
        "com.googlecode.aviator.runtime.function.seq.SeqIncludeFunctionUnitTest#testInclude_HashSet",
        "com.googlecode.aviator.runtime.function.string.StringSubstringWithFunctionUnitTest#testCall",
        "com.googlecode.aviator.runtime.function.custom.CustomFunctionUnitTest#testGetFirstNonNullFunctionNestWithManyParams",
        "com.googlecode.aviator.AviatorEvaluatorInstanceUnitTest#testExecIllegalArguments",
        "com.googlecode.aviator.runtime.function.seq.SeqMapFunctionUnitTest#testMap_Map",
        "com.googlecode.aviator.runtime.type.AviatorJavaTypeUnitTest#compareWithJavaType",
        "com.googlecode.aviator.runtime.function.string.StringContainsFunctionUnitTest#testClassCastError1",
        "com.googlecode.aviator.test.function.FunctionTest#testArithmeticExpression",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testTernaryWithParen2",
        "com.googlecode.aviator.lexer.ExpressionLexerUnitTest#testParseBigInteger",
        "com.googlecode.aviator.code.asm.ASMCodeGeneratorUnitTest#testOnAnd_False",
        "com.googlecode.aviator.runtime.type.AviatorJavaTypeUnitTest#testGetElement_IllegalArgument2",
        "com.googlecode.aviator.runtime.type.AviatorNumberUnitTest#testMultWithOtherType1",
        "com.googlecode.aviator.test.function.FunctionTest#testAlwaysUseDoubleAsDecimal",
        "com.googlecode.aviator.runtime.function.math.MathLog10FunctionUnitTest#testClassCastError1",
        "com.googlecode.aviator.LambdaUnitTest#testSimpleLambdaWithEnv",
        "com.googlecode.aviator.runtime.function.string.StringEndsWithFunctionUnitTest#testCall",
        "com.googlecode.aviator.test.function.GrammarUnitTest#testArrayIndexAccessWithMethod",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testMultiDimensionalArrayAccess1",
        "com.googlecode.aviator.runtime.function.FunctionUtilsUnitTest#testGetFunction_neg",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testIllegalTernary2",
        "com.googlecode.aviator.lexer.ExpressionLexerUnitTest#testExpression_Neg",
        "com.googlecode.aviator.runtime.function.math.MathRoundFunctionUnitTest#testCall",
        "com.googlecode.aviator.runtime.function.math.MathLogFunctionUnitTest#testNullPointer",
        "com.googlecode.aviator.runtime.function.string.StringReplaceFunctionUnitTest#testReplaceFirst",
        "com.googlecode.aviator.runtime.function.seq.SeqPredicateFunctionUnitTest#testPredicate_lt",
        "com.googlecode.aviator.runtime.type.AviatorPatternUnitTest#testNeg",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testParseExpression_IllegalParens",
        "com.googlecode.aviator.test.function.FunctionTest#testParseBigNumbers",
        "com.googlecode.aviator.runtime.type.AviatorNilUnitTest#testAddString",
        "com.googlecode.aviator.runtime.function.string.StringEndsWithFunctionUnitTest#testIllegalArguments_Three",
        "com.googlecode.aviator.runtime.type.AviatorJavaTypeUnitTest#modJavaBooleanWithJavaNumber",
        "com.googlecode.aviator.runtime.function.seq.SeqReduceFunctionUnitTest#testReduce_IllegalArguments",
        "com.googlecode.aviator.runtime.function.math.MathSqrtFunctionUnitTest#testClassCastError1",
        "com.googlecode.aviator.code.asm.ASMCodeGeneratorUnitTest#testOnNot_True",
        "com.googlecode.aviator.runtime.function.string.StringContainsFunctionUnitTest#testIllegalArguments_null",
        "com.googlecode.aviator.lexer.ExpressionLexerUnitTest#testExpression_WithDouble",
        "com.googlecode.aviator.runtime.type.AviatorNumberUnitTest#testDivWithOtherType1",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testTernaryWithIllegalParen1",
        "com.googlecode.aviator.code.asm.ASMCodeGeneratorUnitTest#testOnConstant_Boolean_True",
        "com.googlecode.aviator.AviatorEvaluatorUnitTest#evaluatorWithoutCache",
        "com.googlecode.aviator.runtime.function.seq.SeqPredicateFunctionUnitTest#testPredicate_eq",
        "com.googlecode.aviator.test.function.FunctionTest#testDisablePropertySyntaxSugar",
        "com.googlecode.aviator.runtime.type.AviatorNumberUnitTest#testCompareWithString",
        "com.googlecode.aviator.lexer.ExpressionLexerUnitTest#testNotAnsylyse",
        "com.googlecode.aviator.runtime.type.AviatorPatternUnitTest#testAddJavaString",
        "com.googlecode.aviator.runtime.function.seq.SeqPredicateFunctionUnitTest#testPredicate_IllegalArguments",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testCommonPattern",
        "com.googlecode.aviator.runtime.type.AviatorJavaTypeUnitTest#testMultWithNumber",
        "com.googlecode.aviator.LambdaUnitTest#testSimpleLambda",
        "com.googlecode.aviator.runtime.type.AviatorJavaTypeUnitTest#divJavaBooleanWithJavaNumber",
        "com.googlecode.aviator.JavaMethodReflectionFunctionMissingTest#benchmark",
        "com.googlecode.aviator.AviatorEvaluatorUnitTest#testExecIllegalArguments",
        "com.googlecode.aviator.test.function.GrammarUnitTest#testComparePattern",
        "com.googlecode.aviator.runtime.function.system.BinaryFunctionUnitTest#testNotFunction",
        "com.googlecode.aviator.parser.ExpressionParserUnitTest#testParseGroup",
        "com.googlecode.aviator.runtime.function.seq.SeqPredicateFunctionUnitTest#testPredicate_le",
        "com.googlecode.aviator.runtime.function.string.StringLengthFunctionUnitTest#testIllegalArguments_null",
        "com.googlecode.aviator.runtime.type.AviatorBooleanUnitTest#testAddNumber",
        "com.googlecode.aviator.runtime.function.math.MathSqrtFunctionUnitTest#testClassCastError2",
        "com.googlecode.aviator.runtime.type.AviatorPatternUnitTest#testMatchJavaNumber",
        "com.googlecode.aviator.runtime.type.AviatorBooleanUnitTest#testNeg",
        "com.googlecode.aviator.runtime.function.string.StringSubstringWithFunctionUnitTest#testNullPointerException2",
        "com.googlecode.aviator.runtime.function.string.StringIndexOfFunctionUnitTest#testIllegalArguments_Three",
        "com.googlecode.aviator.runtime.type.AviatorStringUnitTest#testCompareString"
    ],
    "failing_test_identifiers": [
        "com.googlecode.aviator.test.function.GrammarUnitTest#testIssue177"
    ],
    "source_directory": "src/main/java",
    "class_directory": "target/classes",
    "test_directory": "src/test/java",
    "test_class_directory": "target/test-classes",
    "language": "java",
    "java_version": "8",
    "build_system": "maven",
    "dependencies": [
        "generated-dependencies/spring-core-4.3.16.RELEASE.jar",
        "generated-dependencies/spring-expression-4.3.16.RELEASE.jar",
        "generated-dependencies/spring-aop-4.3.16.RELEASE.jar",
        "generated-dependencies/commons-logging-1.2.jar",
        "generated-dependencies/spring-beans-4.3.16.RELEASE.jar",
        "generated-dependencies/junit-4.3.1.jar",
        "generated-dependencies/spring-context-4.3.16.RELEASE.jar",
        "generated-dependencies/commons-collections-3.2.2.jar",
        "generated-dependencies/commons-beanutils-1.9.3.jar"
    ]
}