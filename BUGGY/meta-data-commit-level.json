{
    "id": 9,
    "subject": "",
    "bug_id": "RegressionBug-9",
    "source_file": "",
    "line_number": [],
    "count_neg": 3,
    "count_pos": 477,
    "passing_test_identifiers": [
        "com.github.javafaker.SuperheroTest#testSuffix",
        "com.github.javafaker.CountryTest#testName",
        "com.github.javafaker.NameTest#testSuffix",
        "com.github.javafaker.SlackEmojiTest#food_and_drink",
        "com.github.javafaker.SpaceTest#galaxy",
        "com.github.javafaker.service.RandomServiceTest#testLongMaxBoundary[Created via RandomService()]",
        "com.github.javafaker.WeatherTest#temperatureFahrenheit",
        "com.github.javafaker.service.RandomServiceTest#testLongMaxBoundary[Created via RandomService(Random)]",
        "com.github.javafaker.DuneTest#planet",
        "com.github.javafaker.InternetTest#testPasswordMinLengthMaxLengthIncludeUpperCase",
        "com.github.javafaker.NameTest#testUsernameWithSpaces",
        "com.github.javafaker.SlackEmojiTest#nature",
        "com.github.javafaker.InternetTest#testDomainSuffix",
        "com.github.javafaker.SlackEmojiTest#emoji",
        "com.github.javafaker.OverwatchTest#quote",
        "com.github.javafaker.FakerTest#resolveShouldReturnValueThatExists",
        "com.github.javafaker.RelationshipTest#siblingTest",
        "com.github.javafaker.StarTrekTest#specie",
        "com.github.javafaker.CodeTest#testIsbn13",
        "com.github.javafaker.WitcherTest#testWitcher",
        "com.github.javafaker.service.FakeValuesGroupingTest#handlesMultipleFakeValues",
        "com.github.javafaker.InternetTest#testSafeEmailAddressDoesNotIncludeAccentsInTheLocalPart",
        "com.github.javafaker.HitchhikersGuideToTheGalaxyTest#character",
        "com.github.javafaker.CommerceTest#testPrice",
        "com.github.javafaker.CountryTest#testCode2",
        "com.github.javafaker.CodeTest#imei",
        "com.github.javafaker.FileTest#testMimeTypeFormat",
        "com.github.javafaker.AddressTest#testCityWithLocaleFranceAndSeed",
        "com.github.javafaker.AncientTest#titan",
        "com.github.javafaker.FunnyNameTest#name",
        "com.github.javafaker.SpaceTest#moon",
        "com.github.javafaker.InternetTest#testUuid",
        "com.github.javafaker.service.FakeValuesServiceTest#resolveKeyWithMultiplePropertiesShouldJoinResults",
        "com.github.javafaker.CryptoTest#testMd5",
        "com.github.javafaker.MusicTest#genre",
        "com.github.javafaker.service.FakeValuesTest#supportsPathIsFalseWhenValueIsNotTheSame",
        "com.github.javafaker.BoolTest#testBool",
        "com.github.javafaker.DogTest#gender",
        "com.github.javafaker.JobTest#field",
        "com.github.javafaker.ShakespeareTest#testKingRichardIIIQuote",
        "com.github.javafaker.service.FakeValuesTest#getAValueReturnsAValue",
        "com.github.javafaker.CodeTest#isbn10DefaultIsNoSeparator",
        "com.github.javafaker.HowIMetYourMotherTest#character",
        "com.github.javafaker.HarryPotterTest#location",
        "com.github.javafaker.NameTest#testFirstName",
        "com.github.javafaker.AddressTest#testStreetAddressIncludeSecondary",
        "com.github.javafaker.SpaceTest#nasaSpaceCraft",
        "com.github.javafaker.service.FakeValuesServiceTest#futureDateExpression",
        "com.github.javafaker.matchers.IsStringWithContentsTest#emptyStringShouldFail",
        "com.github.javafaker.CodeTest#ean8",
        "com.github.javafaker.ZeldaTest#game",
        "com.github.javafaker.TeamTest#testCreature",
        "com.github.javafaker.DateAndTimeTest#testPastDateWithReferenceDate",
        "com.github.javafaker.DuneTest#character",
        "com.github.javafaker.DuneTest#randomQuote",
        "com.github.javafaker.service.FakeValuesServiceTest#testLocaleChainLanguageOnly",
        "com.github.javafaker.InternetTest#testImageWithExplicitParams",
        "com.github.javafaker.AnimalTest#name",
        "com.github.javafaker.TwinPeaksTest#quote",
        "com.github.javafaker.BookTest#testGenre",
        "com.github.javafaker.WeatherTest#temperatureCelsius",
        "com.github.javafaker.RickAndMortyTest#location",
        "com.github.javafaker.HarryPotterTest#character",
        "com.github.javafaker.InternetTest#testIpV4Address",
        "com.github.javafaker.RandomFakerTest#testLetterifyRandomnessCanBeControlled",
        "com.github.javafaker.LoremTest#testSentenceWithWordCount",
        "com.github.javafaker.FakerTest#fakerInstanceCanBeAcquiredViaUtilityMethods",
        "com.github.javafaker.UniversityTest#testPrefix",
        "com.github.javafaker.FakerTest#regexifyShouldGenerateBracketsQuantifiersOnAlternations",
        "com.github.javafaker.SpaceTest#meteorite",
        "com.github.javafaker.AddressTest#testZipCodeByState",
        "com.github.javafaker.AddressTest#testLongitude",
        "com.github.javafaker.FinanceTest#creditCard",
        "com.github.javafaker.InternetTest#testSafeEmailAddressWithLocalPartParameter",
        "com.github.javafaker.PhoneNumberTest#testSubscriberNumberWithLength",
        "com.github.javafaker.NationTest#nationality",
        "com.github.javafaker.FakerTest#regexifyShouldGenerateMultipleCharacterClassRanges",
        "com.github.javafaker.HackerTest#testVerb",
        "com.github.javafaker.BuffyTest#testBigBads",
        "com.github.javafaker.InternetTest#testPasswordMinLengthMaxLengthIncludeUpperCaseIncludeSpecial",
        "com.github.javafaker.DogTest#breed",
        "com.github.javafaker.DateAndTimeTest#testPastDateWithMinimum",
        "com.github.javafaker.CodeTest#gtin8",
        "com.github.javafaker.BeerTest#testStyle",
        "com.github.javafaker.DateAndTimeTest#testBetween",
        "com.github.javafaker.SpaceTest#nebula",
        "com.github.javafaker.AddressTest#testCity",
        "com.github.javafaker.NameTest#testBloodGroup",
        "com.github.javafaker.PhoneNumberTest#testSubscriberNumber",
        "com.github.javafaker.TeamTest#testSport",
        "com.github.javafaker.NameTest#testTitle",
        "com.github.javafaker.NumberTest#testRandomDouble",
        "com.github.javafaker.AddressTest#testCityName",
        "com.github.javafaker.FakerTest#numerifyShouldGenerateNumbers",
        "com.github.javafaker.PhoneNumberTest#testCellPhone_enUS",
        "com.github.javafaker.PrincessBrideTest#character",
        "com.github.javafaker.matchers.IsStringWithContentsTest#nullStringShouldFail",
        "com.github.javafaker.service.FakeValuesServiceTest#resolveKeyToPropertyWithAPropertyWithoutAnObject",
        "com.github.javafaker.NumberTest#testRandomDigitNotZero",
        "com.github.javafaker.DogTest#age",
        "com.github.javafaker.BookTest#testPublisher",
        "com.github.javafaker.LoremTest#testCharactersWithLengthIncludeUppercase",
        "com.github.javafaker.service.FakeValuesServiceTest#regexifyDirective2",
        "com.github.javafaker.CurrencyTest#testName",
        "com.github.javafaker.FinanceTest#ibanWithCountryCode",
        "com.github.javafaker.HobbitTest#character",
        "com.github.javafaker.LoremTest#testCharactersIncludeUpperCase",
        "com.github.javafaker.FakerTest#regexifyShouldGenerateNumbers",
        "com.github.javafaker.HitchhikersGuideToTheGalaxyTest#quote",
        "com.github.javafaker.IdNumberTest#testValidSwedishSsn",
        "com.github.javafaker.SpaceTest#starCluster",
        "com.github.javafaker.FakerTest#regexifyShouldGenerateSameValueForFakerWithSameSeed",
        "com.github.javafaker.FinanceTest#creditCardWithType",
        "com.github.javafaker.matchers.IsANumberTest#testOtherCharsIsNotANumber",
        "com.github.javafaker.InternetTest#testPasswordIncludeDigit",
        "com.github.javafaker.InternetTest#testEmailAddressDoesNotIncludeAccentsInTheLocalPart",
        "com.github.javafaker.InternetTest#testUrl",
        "com.github.javafaker.SuperheroTest#testDescriptor",
        "com.github.javafaker.InternetTest#testIpV6",
        "com.github.javafaker.CodeTest#testOverrides",
        "com.github.javafaker.HowIMetYourMotherTest#highFive",
        "com.github.javafaker.PhoneNumberTest#testExtension",
        "com.github.javafaker.InternetTest#testPasswordMinLengthMaxLength",
        "com.github.javafaker.SuperheroTest#testPrefix",
        "com.github.javafaker.service.FakeValuesServiceTest#safeFetchShouldReturnSimpleList",
        "com.github.javafaker.BookTest#testTitle",
        "com.github.javafaker.AddressTest#testLatitude",
        "com.github.javafaker.FakerTest#badExpressionCouldntCoerce",
        "com.github.javafaker.ElderScrollsTest#testRace",
        "com.github.javafaker.NumberTest#testRandomDigit",
        "com.github.javafaker.OverwatchTest#hero",
        "com.github.javafaker.SpaceTest#constellation",
        "com.github.javafaker.MedicalTest#testHospitalName",
        "com.github.javafaker.FoodTest#vegetable",
        "com.github.javafaker.CodeTest#gtin13",
        "com.github.javafaker.CountryTest#testFlag",
        "com.github.javafaker.AddressTest#testTimeZone",
        "com.github.javafaker.CryptoTest#testSha512",
        "com.github.javafaker.AncientTest#god",
        "com.github.javafaker.HobbitTest#location",
        "com.github.javafaker.NationTest#capitalCity",
        "com.github.javafaker.FakerTest#numerifyShouldLeaveNonSpecialCharactersAlone",
        "com.github.javafaker.RandomFakerTest#testNameRandomnessCanBeControlled",
        "com.github.javafaker.service.FakeValuesServiceTest#resolveKeyToPropertyWithAPropertyWithAnObject",
        "com.github.javafaker.PhoneNumberTest#testPhoneNumber",
        "com.github.javafaker.HitchhikersGuideToTheGalaxyTest#location",
        "com.github.javafaker.PrincessBrideTest#quote",
        "com.github.javafaker.EsportsTest#player",
        "com.github.javafaker.FriendsTest#quote",
        "com.github.javafaker.HackerTest#testAbbreviation",
        "com.github.javafaker.NationTest#language",
        "com.github.javafaker.AppTest#testAuthor",
        "com.github.javafaker.FakerTest#regexifyShouldGenerateAlternations",
        "com.github.javafaker.UniversityTest#testName",
        "com.github.javafaker.BuffyTest#testEpisodes",
        "com.github.javafaker.HackerTest#testNoun",
        "com.github.javafaker.IdNumberTest#testSsnValid",
        "com.github.javafaker.CommerceTest#testPriceMinMax",
        "com.github.javafaker.DateAndTimeTest#testFutureDate",
        "com.github.javafaker.GameOfThronesTest#character",
        "com.github.javafaker.service.RandomServiceTest#testIntInRange[Created via RandomService()]",
        "com.github.javafaker.InternetTest#testAvatar",
        "com.github.javafaker.GameOfThronesTest#city",
        "com.github.javafaker.NameTest#testFullName",
        "com.github.javafaker.OptionsTest#testNextListElement",
        "com.github.javafaker.InternetTest#testPasswordMinLengthMaxLengthIncludeUpperCaseIncludeSpecialIncludeDigit",
        "com.github.javafaker.EducatorTest#testCourse",
        "com.github.javafaker.LoremTest#wordShouldNotBeNullOrEmpty",
        "com.github.javafaker.HowIMetYourMotherTest#quote",
        "com.github.javafaker.SuperheroTest#testPower",
        "com.github.javafaker.FakerTest#letterifyShouldGenerateLetters",
        "com.github.javafaker.LebowskiTest#quote",
        "com.github.javafaker.LoremTest#testCharactersMinimumMaximumLengthIncludeUppercaseIncludeDigit",
        "com.github.javafaker.WitcherTest#testCharacter",
        "com.github.javafaker.WeatherTest#temperatureCelsiusInRange",
        "com.github.javafaker.SlackEmojiTest#celebration",
        "com.github.javafaker.BackToTheFutureTest#character",
        "com.github.javafaker.BeerTest#testHop",
        "com.github.javafaker.FakerTest#regexifyShouldGenerateSingleCharacterQuantifiers",
        "com.github.javafaker.AncientTest#hero",
        "com.github.javafaker.NumberTest#testRandomNumberWithGivenDigitsStrict",
        "com.github.javafaker.NameTest#testLastName",
        "com.github.javafaker.LordOfTheRingsTest#character",
        "com.github.javafaker.integration.UkLocalDirectivesTest#resolvesDirectivesOnlyInYmlFile",
        "com.github.javafaker.CatTest#name",
        "com.github.javafaker.SlackEmojiTest#objects_and_symbols",
        "com.github.javafaker.SpaceTest#agencyAbbreviation",
        "com.github.javafaker.service.FakeValuesServiceTest#safeFetchShouldReturnValueInList",
        "com.github.javafaker.matchers.IsStringWithContentsTest#whiteSpaceShouldFail",
        "com.github.javafaker.service.FakeValuesServiceTest#expressionWithValidFakerObjectButInvalidMethod",
        "com.github.javafaker.FoodTest#sushi",
        "com.github.javafaker.StockTest#testNYSE",
        "com.github.javafaker.DuneTest#title",
        "com.github.javafaker.SpaceTest#planet",
        "com.github.javafaker.LeagueOfLegendsTest#location",
        "com.github.javafaker.FoodTest#fruit",
        "com.github.javafaker.JobTest#seniority",
        "com.github.javafaker.FileTest#testFileName",
        "com.github.javafaker.DateAndTimeTest#testFutureDateWithMinimum",
        "com.github.javafaker.OverwatchTest#location",
        "com.github.javafaker.CryptoTest#testSha256",
        "com.github.javafaker.LordOfTheRingsTest#location",
        "com.github.javafaker.LoremTest#testSentenceWithWordCountAndRandomWordsToAdd",
        "com.github.javafaker.BuffyTest#testCharacters",
        "com.github.javafaker.LoremTest#testCharactersMinimumMaximumLengthIncludeUppercase",
        "com.github.javafaker.DogTest#name",
        "com.github.javafaker.AddressTest#testCountyByZipCode",
        "com.github.javafaker.HackerTest#testAdjective",
        "com.github.javafaker.PhoneNumberTest#testPhone_esMx",
        "com.github.javafaker.DogTest#memePhrase",
        "com.github.javafaker.TwinPeaksTest#character",
        "com.github.javafaker.service.FakeValuesServiceTest#resolveKeyToPropertyWithAList",
        "com.github.javafaker.TwinPeaksTest#location",
        "com.github.javafaker.BackToTheFutureTest#quote",
        "com.github.javafaker.DragonBallTest#character",
        "com.github.javafaker.RandomFakerTest#testNumerifyRandomnessCanBeControlled",
        "com.github.javafaker.ShakespeareTest#testRomeoAndJulietQuote",
        "com.github.javafaker.MatzTest#quote",
        "com.github.javafaker.NumberTest#testRandomNumberWithSingleDigitStrict",
        "com.github.javafaker.HitchhikersGuideToTheGalaxyTest#marvinQuote",
        "com.github.javafaker.service.FakeValuesServiceTest#safeFetchShouldReturnEmptyStringWhenPropertyDoesntExist",
        "com.github.javafaker.LoremTest#testCharacters",
        "com.github.javafaker.CodeTest#testIsbn10",
        "com.github.javafaker.CompanyTest#testSuffix",
        "com.github.javafaker.InternetTest#testIpV6Cidr",
        "com.github.javafaker.service.FakeValuesServiceTest#fetchShouldReturnValue",
        "com.github.javafaker.DogTest#size",
        "com.github.javafaker.InternetTest#testPrivateIpV4Address",
        "com.github.javafaker.EducatorTest#testSecondarySchool",
        "com.github.javafaker.WitcherTest#testQuote",
        "com.github.javafaker.service.RandomServiceTest#testPositiveBoundariesOnly[Created via RandomService()]",
        "com.github.javafaker.CryptoTest#testSha1",
        "com.github.javafaker.CatTest#breed",
        "com.github.javafaker.EsportsTest#team",
        "com.github.javafaker.WitcherTest#testSchool",
        "com.github.javafaker.ElderScrollsTest#testQuote",
        "com.github.javafaker.service.FakeValuesServiceTest#regexifyDirective",
        "com.github.javafaker.ElderScrollsTest#testRegion",
        "com.github.javafaker.LoremTest#testSentence",
        "com.github.javafaker.InternetTest#testPublicIpV4Address",
        "com.github.javafaker.TeamTest#testName",
        "com.github.javafaker.UniversityTest#testSuffix",
        "com.github.javafaker.FoodTest#ingredient",
        "com.github.javafaker.RelationshipTest#parentTest",
        "com.github.javafaker.SpaceTest#star",
        "com.github.javafaker.ElderScrollsTest#testCreature",
        "com.github.javafaker.HarryPotterTest#book",
        "com.github.javafaker.FakerTest#badExpressionTooManyArgs",
        "com.github.javafaker.service.RandomServiceTest#testPositiveBoundariesOnly[Created via RandomService(Random)]",
        "com.github.javafaker.FakerTest#regexifyShouldGenerateCharacterClassRanges",
        "com.github.javafaker.CompanyTest#testProfession",
        "com.github.javafaker.CompanyTest#testBs",
        "com.github.javafaker.DemographicTest#maritalStatus",
        "com.github.javafaker.service.FakeValuesServiceTest#expressionWithInvalidFakerObject",
        "com.github.javafaker.DemographicTest#demonym",
        "com.github.javafaker.SpaceTest#distanceMeasurement",
        "com.github.javafaker.SpaceTest#company",
        "com.github.javafaker.InternetTest#testEmailAddressWithLocalPartParameter",
        "com.github.javafaker.CompanyTest#testIndustry",
        "com.github.javafaker.InternetTest#testFarsiIDNs",
        "com.github.javafaker.service.FakeValuesGroupingTest#handlesOneFakeValue",
        "com.github.javafaker.MusicTest#instrument",
        "com.github.javafaker.ShakespeareTest#testAsYouLikeItQuote",
        "com.github.javafaker.FakerTest#expression",
        "com.github.javafaker.EducatorTest#testUniversity",
        "com.github.javafaker.ElderScrollsTest#testDragon",
        "com.github.javafaker.HobbitTest#quote",
        "com.github.javafaker.MedicalTest#testMedicineName",
        "com.github.javafaker.NationTest#flag",
        "com.github.javafaker.ElderScrollsTest#testLastName",
        "com.github.javafaker.OptionsTest#testOptionWithVarargsInteger",
        "com.github.javafaker.AddressTest#testCountryCode",
        "com.github.javafaker.RandomFakerTest#testEmailRandomnessCanBeControlled",
        "com.github.javafaker.BeerTest#testName",
        "com.github.javafaker.StarTrekTest#villain",
        "com.github.javafaker.AppTest#testVersion",
        "com.github.javafaker.NumberTest#numberBetweenIntIntRandomizationQuality",
        "com.github.javafaker.IdNumberTest#testValid",
        "com.github.javafaker.HarryPotterTest#quote",
        "com.github.javafaker.FakerTest#regexifyShouldGenerateEscapedCharacters",
        "com.github.javafaker.CurrencyTest#testCode",
        "com.github.javafaker.MedicalTest#testSymptom",
        "com.github.javafaker.FileTest#testExtension",
        "com.github.javafaker.NumberTest#testRandomNumberWithZeroDigitsStrict",
        "com.github.javafaker.BuffyTest#testCelebrities",
        "com.github.javafaker.EducatorTest#testCampus",
        "com.github.javafaker.ColorTest#testName",
        "com.github.javafaker.FakerTest#regexifyShouldGenerateBracketsQuantifiersOnBasicCharacterClasses",
        "com.github.javafaker.CountryTest#testCapital",
        "com.github.javafaker.SlackEmojiTest#travel_and_places",
        "com.github.javafaker.LoremTest#testSentenceFixedNumberOfWords",
        "com.github.javafaker.CompanyTest#testLogo",
        "com.github.javafaker.FileTest#testFileNameSpecifySeparator",
        "com.github.javafaker.AviationTest#testAviation",
        "com.github.javafaker.RelationshipTest#extendedTest",
        "com.github.javafaker.service.FakeValuesServiceTest#expressionCompletelyUnresolvable",
        "com.github.javafaker.InternetTest#testSlugWithParams",
        "com.github.javafaker.NumberTest#numberBetweenLongLongRandomizationQuality",
        "com.github.javafaker.service.RandomServiceTest#testHex[Created via RandomService()]",
        "com.github.javafaker.InternetTest#testPassword",
        "com.github.javafaker.InternetTest#testUserAgent",
        "com.github.javafaker.SlackEmojiTest#people",
        "com.github.javafaker.FoodTest#dish",
        "com.github.javafaker.IdNumberTest#testInvalid",
        "com.github.javafaker.NameTest#testUsername",
        "com.github.javafaker.NameTest#testNameWithMiddle",
        "com.github.javafaker.DemographicTest#race",
        "com.github.javafaker.DuneTest#saying",
        "com.github.javafaker.RelationshipTest#inLawTest",
        "com.github.javafaker.service.FakeValuesServiceTest#fetchObjectShouldReturnValue",
        "com.github.javafaker.CompanyTest#testUrl",
        "com.github.javafaker.matchers.IsANumberTest#testNumberShouldBeANumber",
        "com.github.javafaker.FakerTest#resolveShouldThrowExceptionWhenPropertyDoesntExist",
        "com.github.javafaker.EsportsTest#game",
        "com.github.javafaker.NumberTest#testNumberBetween",
        "com.github.javafaker.CommerceTest#testProductName",
        "com.github.javafaker.HitchhikersGuideToTheGalaxyTest#specie",
        "com.github.javafaker.CodeTest#ean13",
        "com.github.javafaker.RelationshipTest#anyTest",
        "com.github.javafaker.InternetTest#testMacAddress",
        "com.github.javafaker.service.FakeValuesServiceTest#expressionWithValidFakerObjectValidMethodInvalidArgs",
        "com.github.javafaker.ElderScrollsTest#testCity",
        "com.github.javafaker.StarTrekTest#character",
        "com.github.javafaker.LebowskiTest#character",
        "com.github.javafaker.AvatarTest#testAvatar",
        "com.github.javafaker.FinanceTest#iban",
        "com.github.javafaker.CatTest#registry",
        "com.github.javafaker.CommerceTest#testPromotionCode",
        "com.github.javafaker.service.FakeValuesServiceTest#regexifySlashFormatDirective",
        "com.github.javafaker.WitcherTest#testLocation",
        "com.github.javafaker.OptionsTest#testOptionWithVarargsString",
        "com.github.javafaker.InternetTest#testImage",
        "com.github.javafaker.HitchhikersGuideToTheGalaxyTest#planet",
        "com.github.javafaker.DateAndTimeTest#testBirthdayWithAges",
        "com.github.javafaker.ShakespeareTest#testHamletQuote",
        "com.github.javafaker.service.FakeValuesServiceTest#bothify2Args",
        "com.github.javafaker.FakerTest#regexifyShouldGenerateLetters",
        "com.github.javafaker.AncientTest#primordial",
        "com.github.javafaker.WitcherTest#testMonster",
        "com.github.javafaker.FileTest#testFileNameSpecifyExtension",
        "com.github.javafaker.CommerceTest#testMaterial",
        "com.github.javafaker.EsportsTest#event",
        "com.github.javafaker.PhoneNumberTest#testCellPhone",
        "com.github.javafaker.FriendsTest#character",
        "com.github.javafaker.MusicTest#key",
        "com.github.javafaker.service.FakeValuesTest#getAValueForHebrewLocale",
        "com.github.javafaker.IdNumberTest#testInvalidSwedishSsn",
        "com.github.javafaker.NameTest#testName",
        "com.github.javafaker.BeerTest#testMalt",
        "com.github.javafaker.LoremTest#testCharactersWithLength",
        "com.github.javafaker.SuperheroTest#testName",
        "com.github.javafaker.CountryTest#testCode3",
        "com.github.javafaker.CountryTest#testCurrencyCode",
        "com.github.javafaker.LoremTest#testCharacterIncludeUpperCase",
        "com.github.javafaker.BookTest#testAuthor",
        "com.github.javafaker.DemographicTest#sex",
        "com.github.javafaker.TeamTest#testState",
        "com.github.javafaker.LeagueOfLegendsTest#masteries",
        "com.github.javafaker.AddressTest#testState",
        "com.github.javafaker.FoodTest#spice",
        "com.github.javafaker.NumberTest#testRandomNumber",
        "com.github.javafaker.service.RandomServiceTest#testLongWithinBoundary[Created via RandomService(Random)]",
        "com.github.javafaker.StarTrekTest#location",
        "com.github.javafaker.FakerTest#bothifyShouldGenerateLettersAndNumbers",
        "com.github.javafaker.CompanyTest#testName",
        "com.github.javafaker.DogTest#sound",
        "com.github.javafaker.ColorTest#testHex",
        "com.github.javafaker.service.FakeValuesTest#supportsPathIsTrueWithTheSameValueAsThePath",
        "com.github.javafaker.RickAndMortyTest#character",
        "com.github.javafaker.matchers.IsANumberTest#testEmptyStringIsNotANumber",
        "com.github.javafaker.LebowskiTest#actor",
        "com.github.javafaker.SpaceTest#agency",
        "com.github.javafaker.service.FakeValuesServiceTest#testLocaleChain",
        "com.github.javafaker.OptionsTest#testOptionWithArray",
        "com.github.javafaker.idnumbers.SwedishIdNumberTest#invalid",
        "com.github.javafaker.LoremTest#testCharactersMinimumMaximumLength",
        "com.github.javafaker.CompanyTest#testCatchPhrase",
        "com.github.javafaker.CountryTest#testCurrency",
        "com.github.javafaker.ChuckNorrisTest#testFact",
        "com.github.javafaker.AddressTest#testCountry",
        "com.github.javafaker.DuneTest#quote",
        "com.github.javafaker.RockBandTest#name",
        "com.github.javafaker.JobTest#keySkills",
        "com.github.javafaker.JobTest#position",
        "com.github.javafaker.FileTest#testFileNameSpecifyName",
        "com.github.javafaker.ZeldaTest#character",
        "com.github.javafaker.HowIMetYourMotherTest#catchPhrase",
        "com.github.javafaker.PokemonTest#name",
        "com.github.javafaker.OptionsTest#testOptionWithEnum",
        "com.github.javafaker.CompanyTest#testBuzzword",
        "com.github.javafaker.service.FakeValuesServiceTest#fetchStringShouldReturnValue",
        "com.github.javafaker.GameOfThronesTest#house",
        "com.github.javafaker.CommerceTest#testPromotionCodeDigits",
        "com.github.javafaker.FinanceTest#bic",
        "com.github.javafaker.NumberTest#testNumberBetweenOneAndThree",
        "com.github.javafaker.service.RandomServiceTest#testLongWithinBoundary[Created via RandomService()]",
        "com.github.javafaker.MusicTest#chord",
        "com.github.javafaker.SlackEmojiTest#activity",
        "com.github.javafaker.HipsterTest#word",
        "com.github.javafaker.AppTest#testName",
        "com.github.javafaker.FakerTest#regexifyShouldGenerateBasicCharacterClasses",
        "com.github.javafaker.RickAndMortyTest#quote",
        "com.github.javafaker.InternetTest#testSlug",
        "com.github.javafaker.NameTest#testPrefix",
        "com.github.javafaker.FakerTest#regexifyShouldGenerateBracketsQuantifiers",
        "com.github.javafaker.CodeTest#asin",
        "com.github.javafaker.FakerTest#regexifyShouldGenerateBracketsQuantifiersOnCharacterClassRanges",
        "com.github.javafaker.MedicalTest#testDiseaseName",
        "com.github.javafaker.AddressTest#testStreetPrefix",
        "com.github.javafaker.InternetTest#testDomainName",
        "com.github.javafaker.BuffyTest#testQuotes",
        "com.github.javafaker.matchers.IsStringWithContentsTest#stringShouldPass",
        "com.github.javafaker.StockTest#testNasdaq",
        "com.github.javafaker.LoremTest#shouldCreateFixedLengthString",
        "com.github.javafaker.matchers.IsANumberTest#testBlankIsNotANumber",
        "com.github.javafaker.AddressTest#testStreetAddressStartsWithNumber",
        "com.github.javafaker.InternetTest#testDomainWord",
        "com.github.javafaker.LoremTest#testCharacter",
        "com.github.javafaker.CodeTest#isbn13DefaultIsNoSeparator",
        "com.github.javafaker.service.FakeValuesTest#getAValueFromALocaleThatCantBeLoaded",
        "com.github.javafaker.GameOfThronesTest#quote",
        "com.github.javafaker.FriendsTest#location",
        "com.github.javafaker.CommerceTest#testDepartment",
        "com.github.javafaker.DogTest#coatLength",
        "com.github.javafaker.InternetTest#testSafeEmailAddress",
        "com.github.javafaker.FileTest#testFileNameSpecifyDir",
        "com.github.javafaker.FakerTest#letterifyShouldGenerateUpperCaseLetters",
        "com.github.javafaker.NumberTest#testLongBetweenOneAndThree",
        "com.github.javafaker.NumberTest#randomDoubleRandomizationQuality",
        "com.github.javafaker.DuneTest#randomSaying",
        "com.github.javafaker.PokemonTest#location",
        "com.github.javafaker.InternetTest#testIpV4Cidr",
        "com.github.javafaker.FakerTest#badExpressionTooFewArgs",
        "com.github.javafaker.HobbitTest#thorinsCompany",
        "com.github.javafaker.TeamTest#testStateWithZaLocale",
        "com.github.javafaker.FoodTest#measurement",
        "com.github.javafaker.JobTest#title",
        "com.github.javafaker.service.FakeValuesServiceTest#pastDateExpression",
        "com.github.javafaker.RelationshipTest#directTest",
        "com.github.javafaker.idnumbers.SwedishIdNumberTest#valid",
        "com.github.javafaker.BeerTest#testYeast",
        "com.github.javafaker.AddressTest#testFullAddress",
        "com.github.javafaker.service.FakeValuesServiceTest#testLocaleChainEnglish",
        "com.github.javafaker.RelationshipTest#spouseTest",
        "com.github.javafaker.ElderScrollsTest#testFirstName",
        "com.github.javafaker.service.FakeValuesServiceTest#resolveUsingTheSameKeyTwice",
        "com.github.javafaker.LeagueOfLegendsTest#quote",
        "com.github.javafaker.NumberTest#numberBetweenIntIntZeroMinMax",
        "com.github.javafaker.OptionsTest#testNextArrayElement",
        "com.github.javafaker.service.FakeValuesTest#getAValueDoesNotReturnAValue",
        "com.github.javafaker.FakerTest#regexifyShouldGenerateMinMaxQuantifiers",
        "com.github.javafaker.GameOfThronesTest#dragon",
        "com.github.javafaker.EsportsTest#league",
        "com.github.javafaker.RobinTest#quote",
        "com.github.javafaker.service.RandomServiceTest#testIntInRange[Created via RandomService(Random)]",
        "com.github.javafaker.YodaTest#quote",
        "com.github.javafaker.AddressTest#testStreetAddressIsANumber",
        "com.github.javafaker.InternetTest#testEmailAddress",
        "com.github.javafaker.NameTest#testNameWithMiddleDoesNotHaveRepeatedName",
        "com.github.javafaker.LeagueOfLegendsTest#summonerSpell",
        "com.github.javafaker.WeatherTest#temperatureFahrenheitInRange",
        "com.github.javafaker.HackerTest#testIngverb",
        "com.github.javafaker.CommerceTest#testColor",
        "com.github.javafaker.ColorTest#testHexNoHashSign",
        "com.github.javafaker.DemographicTest#educationalAttainment",
        "com.github.javafaker.DateAndTimeTest#testBirthday",
        "com.github.javafaker.LeagueOfLegendsTest#champion",
        "com.github.javafaker.BackToTheFutureTest#date",
        "com.github.javafaker.WeatherTest#description",
        "com.github.javafaker.ArtistTest#name",
        "com.github.javafaker.service.RandomServiceTest#testHex[Created via RandomService(Random)]",
        "com.github.javafaker.FakerTest#letterifyShouldLeaveNonSpecialCharactersAlone",
        "com.github.javafaker.DateAndTimeTest#testPastDate",
        "com.github.javafaker.SlackEmojiTest#custom",
        "com.github.javafaker.LeagueOfLegendsTest#rank",
        "com.github.javafaker.NumberTest#numberBetweenLongLongZeroMinMax",
        "com.github.javafaker.service.FakeValuesTest#getAValueWithANonEnglishFile"
    ],
    "failing_test_identifiers": [
        "com.github.javafaker.FakerTest#numberBetweenRepeated",
        "com.github.javafaker.NumberTest#testIntNumberBetweenRepeated",
        "com.github.javafaker.NumberTest#testLongNumberBetweenRepeated"
    ],
    "source_directory": "src/main/java",
    "class_directory": "target/classes",
    "test_directory": "src/test/java",
    "test_class_directory": "target/test-classes",
    "language": "java",
    "java_version": "8",
    "build_system": "maven"
}